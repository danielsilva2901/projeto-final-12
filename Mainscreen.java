/*
 * The MIT License
 *
 * Copyright 2023 Daniel Silva.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
package com.pap.prjpapfinal.screens;

import java.text.DateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import java.sql.*;
import com.pap.prjpapfinal.datainfo.ModuloConexao;
import java.awt.Desktop;
import java.io.File;
import java.text.SimpleDateFormat;
import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.pdmodel.PDPage;
import org.apache.pdfbox.pdmodel.PDPageContentStream;
import org.apache.pdfbox.pdmodel.common.PDRectangle;
import org.apache.pdfbox.pdmodel.font.PDType0Font;

/**
 *
 * @author Daniel Silva
 */
public class Mainscreen extends javax.swing.JFrame {

    Connection conexao = null;
    PreparedStatement pst = null;
    ResultSet rs = null;

    public Mainscreen() {
        initComponents();
        conexao = ModuloConexao.conector();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        desktop = new javax.swing.JDesktopPane();
        jPanel1 = new javax.swing.JPanel();
        lbldesk = new javax.swing.JLabel();
        lbluser = new javax.swing.JLabel();
        lbldata = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        menubar = new javax.swing.JMenuBar();
        mencad = new javax.swing.JMenu();
        mencadcli = new javax.swing.JMenuItem();
        mencados = new javax.swing.JMenuItem();
        mencadusu = new javax.swing.JMenuItem();
        menrel = new javax.swing.JMenu();
        menrelcli = new javax.swing.JMenuItem();
        menrelser = new javax.swing.JMenuItem();
        menaju = new javax.swing.JMenu();
        menajusob = new javax.swing.JMenuItem();
        menopc = new javax.swing.JMenu();
        menopcsai = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Mainscreen");
        setPreferredSize(new java.awt.Dimension(850, 500));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        desktop.setPreferredSize(new java.awt.Dimension(640, 479));
        getContentPane().add(desktop, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 0, 650, 490));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lbldesk.setIcon(new javax.swing.ImageIcon("E:\\PAP\\Icons\\vehicle.png")); // NOI18N
        lbldesk.setText("jLabel1");
        jPanel1.add(lbldesk, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 160, 125, -1));

        lbluser.setBackground(new java.awt.Color(255, 255, 255));
        lbluser.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lbluser.setForeground(new java.awt.Color(66, 135, 239));
        lbluser.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbluser.setText("Utilizador");
        jPanel1.add(lbluser, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 100, -1));

        lbldata.setBackground(new java.awt.Color(255, 255, 255));
        lbldata.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lbldata.setForeground(new java.awt.Color(66, 135, 239));
        lbldata.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbldata.setText("Data");
        jPanel1.add(lbldata, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 10, 97, -1));

        jSeparator1.setBackground(new java.awt.Color(66, 135, 239));
        jSeparator1.setForeground(new java.awt.Color(66, 135, 239));
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 30, 110, 10));

        jSeparator2.setBackground(new java.awt.Color(66, 135, 239));
        jSeparator2.setForeground(new java.awt.Color(66, 135, 239));
        jPanel1.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, 100, 10));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 490));

        mencad.setText("Cadastro");
        mencad.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        mencad.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        mencadcli.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.ALT_DOWN_MASK));
        mencadcli.setText("Cliente");
        mencadcli.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        mencadcli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mencadcliActionPerformed(evt);
            }
        });
        mencad.add(mencadcli);

        mencados.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.ALT_DOWN_MASK));
        mencados.setText("OS");
        mencados.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        mencados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mencadosActionPerformed(evt);
            }
        });
        mencad.add(mencados);

        mencadusu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_U, java.awt.event.InputEvent.ALT_DOWN_MASK));
        mencadusu.setText("Utilizadores");
        mencadusu.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        mencadusu.setEnabled(false);
        mencadusu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mencadusuActionPerformed(evt);
            }
        });
        mencad.add(mencadusu);

        menubar.add(mencad);

        menrel.setText("Relatório");
        menrel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        menrel.setEnabled(false);
        menrel.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        menrelcli.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.ALT_DOWN_MASK));
        menrelcli.setText("Clientes");
        menrelcli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menrelcliActionPerformed(evt);
            }
        });
        menrel.add(menrelcli);

        menrelser.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.ALT_DOWN_MASK));
        menrelser.setText("Serviços");
        menrelser.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        menrelser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menrelserActionPerformed(evt);
            }
        });
        menrel.add(menrelser);

        menubar.add(menrel);

        menaju.setText("Ajuda");
        menaju.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        menaju.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        menajusob.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, java.awt.event.InputEvent.ALT_DOWN_MASK));
        menajusob.setText("Sobre");
        menajusob.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        menajusob.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menajusobActionPerformed(evt);
            }
        });
        menaju.add(menajusob);

        menubar.add(menaju);

        menopc.setText("Opções");
        menopc.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        menopc.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        menopcsai.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_DOWN_MASK));
        menopcsai.setText("Sair");
        menopcsai.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        menopcsai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menopcsaiActionPerformed(evt);
            }
        });
        menopc.add(menopcsai);

        menubar.add(menopc);

        setJMenuBar(menubar);

        setSize(new java.awt.Dimension(864, 537));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void mencadcliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mencadcliActionPerformed
        // TODO add your handling code here:
        Clientscreen cliente = new Clientscreen();
        cliente.setVisible(true);
        desktop.add(cliente);
    }//GEN-LAST:event_mencadcliActionPerformed

    private void mencadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mencadosActionPerformed
        // TODO add your handling code here:
        //osscreen
        OSscreen os = new OSscreen();
        os.setVisible(true);
        desktop.add(os);
    }//GEN-LAST:event_mencadosActionPerformed

    private void mencadusuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mencadusuActionPerformed
        // TODO add your handling code here:
        // abrir a tela de utilizador
        Userscreen utilizador = new Userscreen();
        utilizador.setVisible(true);
        desktop.add(utilizador);
    }//GEN-LAST:event_mencadusuActionPerformed

    private void menrelcliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menrelcliActionPerformed
        // TODO add your handling code here:
        int confirma = JOptionPane.showConfirmDialog(null, "Confirma a impressão deste relatório?", "Atenção", JOptionPane.YES_NO_OPTION);
        if (confirma == JOptionPane.YES_OPTION) {
            String sql = "select idclient as ID_Cliente, name_client as Nome, endclient as Morada, foneclient as Telefone, email_client as Email, client_postalcode as Código_Postal from tbclients;";
            //criar o ficheiro
            File clientes = new File("E:\\PAP\\Reports\\Clientes.pdf");
            //verificar se o ficheiro ja existe
            try {
                if (clientes.exists()) {
                    if (clientes.delete()) {
                        //System.out.println("Ficheiro anterior apagado");
                    } else {
                        //System.out.println("Erro ao apagar ficheiro anterior");
                    }
                }
                pst = conexao.prepareStatement(sql);
                rs = pst.executeQuery();

                // Obter a data atual
                Date dataAtual = new Date();
                SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy - HH:mm");
                String dataFormatada = dateFormat.format(dataAtual);

                PDDocument document = new PDDocument();
                PDPage page = new PDPage(new PDRectangle(800, 1000)); // Tamanho de página personalizado
                document.addPage(page);
                PDPageContentStream contentStream = new PDPageContentStream(document, page);
                PDType0Font titleFont = PDType0Font.load(document, new File(
                        "E:\\PAP\\Fonts Rel\\arial\\arial_bold.ttf"));
                PDType0Font dataFont = PDType0Font.load(document, new File("E:\\PAP\\Fonts Rel\\arial\\arial.ttf"));
                PDType0Font fontNegrito = PDType0Font.load(document, new File("E:\\PAP\\Fonts Rel\\arial\\arial_bold.ttf"));

                float margin = 50;
                float yStart = page.getMediaBox().getHeight() - margin;
                float tableWidth = page.getMediaBox().getWidth() - 2 * margin;
                float yPosition = yStart;
                int rowsPerPage = 25; // Aumentei o número de linhas por página
                float rowHeight = 25f; // Tamanho da fonte dos dados dos clientes diminuído
                float tableHeight = rowHeight * rowsPerPage;

                // Defina o tamanho da fonte para o título (aumentado)
                contentStream.setFont(titleFont, 20); // Tamanho do título aumentado

                // Centralize o título horizontalmente
                float titleWidth = titleFont.getStringWidth("Relatório de Clientes") / 1000f * 20;
                float titleX = (page.getMediaBox().getWidth() - titleWidth) / 2;

                // Posicione verticalmente o título abaixo do topo da página
                float titleY = yStart - 20;

                // Desenhe o título "Relatório de Clientes"
                contentStream.beginText();
                contentStream.newLineAtOffset(titleX, titleY);
                contentStream.showText("Relatório de Clientes");
                contentStream.endText();

                // Desenhe um separador abaixo do título
                float separatorY = titleY - 15; // Posição do separador entre o título e os dados
                contentStream.setLineWidth(0.7f); // Largura da linha
                contentStream.moveTo(margin, separatorY);
                contentStream.lineTo(page.getMediaBox().getWidth() - margin, separatorY);
                contentStream.stroke();

                // Cabeçalho da tabela
                float yPositionTable = yStart - 60; // Ajuste o espaço para o cabeçalho da tabela
                contentStream.setFont(fontNegrito, 12); // Tamanho da fonte dos dados dos clientes diminuído
                contentStream.beginText();
                contentStream.newLineAtOffset(margin, yPositionTable);
                contentStream.showText("ID");
                contentStream.newLineAtOffset(30, 0); // Espaço reduzido entre colunas
                contentStream.showText("Nome");
                contentStream.newLineAtOffset(120, 0); // Espaço aumentado entre colunas
                contentStream.showText("Telefone");
                contentStream.newLineAtOffset(100, 0); // Espaço reduzido entre colunas
                contentStream.showText("Email");
                contentStream.newLineAtOffset(220, 0); // Espaço aumentado entre colunas
                contentStream.showText("Morada / Código Postal"); // Combinação de Morada e Código Postal
                contentStream.endText();

                // Adicionar a data de criação no canto superior direito
                float dateX = page.getMediaBox().getWidth() - margin - 165; // Posição X
                float dateY = yStart - 30; // Posição Y
                contentStream.setFont(dataFont, 10);
                contentStream.beginText();
                contentStream.newLineAtOffset(dateX, dateY);
                contentStream.showText("Data de Criação: " + dataFormatada);
                contentStream.endText();

                yPosition -= 80; // Atualiza a posição Y para os dados, deixando espaço após o título e cabeçalho

                int rowCount = 0;
                int pageNumber = 1;

                while (rs.next()) {
                    int id = rs.getInt("ID_Cliente");
                    String nome = rs.getString("Nome");
                    String morada = rs.getString("Morada");
                    String CP = rs.getString("Código_Postal");
                    String fone = rs.getString("Telefone");
                    String email = rs.getString("Email");

                    // Preenche os dados dos clientes na tabela
                    contentStream.setFont(dataFont, 10); // Tamanho da fonte dos dados dos clientes diminuído
                    contentStream.beginText();
                    contentStream.newLineAtOffset(margin, yPosition);
                    contentStream.showText(String.valueOf(id));
                    contentStream.newLineAtOffset(30, 0); // Espaço reduzido entre colunas
                    contentStream.showText(nome);
                    contentStream.newLineAtOffset(120, 0); // Espaço aumentado entre colunas
                    contentStream.showText(fone);
                    contentStream.newLineAtOffset(100, 0); // Espaço reduzido entre colunas
                    contentStream.showText(email);
                    contentStream.newLineAtOffset(220, 0); // Espaço aumentado entre colunas
                    contentStream.showText(morada + " / " + CP); // Combinação de Morada e Código Postal
                    contentStream.endText();

                    yPosition -= rowHeight;

                    rowCount++;

                    // Verifica se precisa criar uma nova página para o restante dos dados
                    if (rowCount >= rowsPerPage) {
                        // Crie uma nova página
                        page = new PDPage(new PDRectangle(800, 1000)); // Tamanho de página personalizado
                        document.addPage(page);
                        contentStream.close(); // Feche o contentStream atual
                        contentStream = new PDPageContentStream(document, page);
                        yStart = page.getMediaBox().getHeight() - margin;
                        yPosition = yStart - 60; // Ajuste o espaço para o cabeçalho da tabela
                        rowCount = 0;
                        pageNumber++; // Incremente o número da página
                    }
                }

                // Feche o último contentStream
                contentStream.close();

                // Adicione o número da página no rodapé de todas as páginas
                for (PDPage p : document.getPages()) {
                    contentStream = new PDPageContentStream(document, p, PDPageContentStream.AppendMode.APPEND, true);
                    contentStream.setFont(dataFont, 10); // Tamanho da fonte para o número da página
                    contentStream.beginText();
                    contentStream.newLineAtOffset(margin, margin + 2);
                    contentStream.showText("Página " + pageNumber);
                    contentStream.endText();

                    // Desenhe uma linha horizontal abaixo do número da página
                    contentStream.setLineWidth(0.7f); // Largura da linha
                    contentStream.moveTo(margin, margin - 5); // Posição inicial da linha
                    contentStream.lineTo(p.getMediaBox().getWidth() - margin, margin - 5); // Posição final da linha
                    contentStream.stroke(); // Desenhe a linha

                    contentStream.close();
                }

                document.save("E:\\PAP\\Reports\\Clientes.pdf");
                document.close();

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
                //System.out.println(e);
            }

            try {
                // Abre o explorador de arquivos na pasta do relatório
                Desktop.getDesktop().open(clientes);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Não foi possível abrir o explorador de arquivos: " + e.getMessage());
                //System.out.println(e);
            }
        }
    }//GEN-LAST:event_menrelcliActionPerformed

    private void menajusobActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menajusobActionPerformed
        // TODO add your handling code here:
        Sobre sobre = new Sobre();
        sobre.setVisible(true);
    }//GEN-LAST:event_menajusobActionPerformed

    private void menopcsaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menopcsaiActionPerformed
        // TODO add your handling code here:
        //exibe uma caixa de dialogo
        int sair = JOptionPane.showConfirmDialog(null, "Tem a certeza que deseja sair?", "Atenção", JOptionPane.YES_NO_OPTION);
        if (sair == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_menopcsaiActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        Date data = new Date();
        DateFormat formatador = DateFormat.getDateInstance(DateFormat.SHORT);
        lbldata.setText(formatador.format(data));
    }//GEN-LAST:event_formWindowOpened

    private void menrelserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menrelserActionPerformed
        // TODO add your handling code here:
        int confirma = JOptionPane.showConfirmDialog(null, "Confirma a impressão deste relatório?", "Atenção", JOptionPane.YES_NO_OPTION);
        if (confirma == JOptionPane.YES_OPTION) {
            String sql = "select OSER.service_order,date_format(data_serviceorder,'%d/%m/%Y - %H:%i') as data,tipo,situacao,equipament,valor, CLI.name_client,foneclient,email_client from tbservice_order as OSER inner join tbclients as CLI on (CLI.idclient = OSER.idclient);";
            //criar o ficheiro
            File relatorioOS = new File("E:\\PAP\\Reports\\relatorioOS.pdf");
            try {
                //verificar se o ficheiro ja existe 
                if (relatorioOS.exists()) {
                    if (relatorioOS.delete()) {
                        //System.out.println("Ficheiro anterior apagado");
                    } else {
                        //System.out.println("Erro ao apagar ficheiro anterior");
                    }
                }
                pst = conexao.prepareStatement(sql);
                rs = pst.executeQuery();

                // Obter a data atual
                Date dataAtual = new Date();
                SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy - HH:mm");
                String dataFormatada = dateFormat.format(dataAtual);

                PDDocument document = new PDDocument();
                PDPage page = new PDPage(new PDRectangle(800, 1000)); // Tamanho de página personalizado
                document.addPage(page);
                PDPageContentStream contentStream = new PDPageContentStream(document, page);
                PDType0Font titleFont = PDType0Font.load(document, new File(
                        "E:\\PAP\\Fonts Rel\\arial\\arial_bold.ttf"));
                PDType0Font dataFont = PDType0Font.load(document, new File("E:\\PAP\\Fonts Rel\\arial\\arial.ttf"));
                PDType0Font fontNegrito = PDType0Font.load(document, new File("E:\\PAP\\Fonts Rel\\arial\\arial_bold.ttf"));

                float margin = 50;
                float yStart = page.getMediaBox().getHeight() - margin;
                float tableWidth = page.getMediaBox().getWidth() - 2 * margin;
                float yPosition = yStart;
                int rowsPerPage = 25; // Aumentei o número de linhas por página
                float rowHeight = 25f; // Tamanho da fonte dos dados dos clientes diminuído
                float tableHeight = rowHeight * rowsPerPage;

                // Defina o tamanho da fonte para o título (aumentado)
                contentStream.setFont(titleFont, 20); // Tamanho do título aumentado

                // Centralize o título horizontalmente
                float titleWidth = titleFont.getStringWidth("Relatório de Ordens de Serviço") / 1000f * 20;
                float titleX = (page.getMediaBox().getWidth() - titleWidth) / 2;

                // Posicione verticalmente o título abaixo do topo da página
                float titleY = yStart - 20;

                // Desenhe o título "Relatório de Clientes"
                contentStream.beginText();
                contentStream.newLineAtOffset(titleX, titleY);
                contentStream.showText("Relatório de Ordens de Serviço");
                contentStream.endText();

                // Desenhe um separador abaixo do título
                float separatorY = titleY - 15; // Posição do separador entre o título e os dados
                contentStream.setLineWidth(0.7f); // Largura da linha
                contentStream.moveTo(margin, separatorY);
                contentStream.lineTo(page.getMediaBox().getWidth() - margin, separatorY);
                contentStream.stroke();

                // Cabeçalho da tabela
                float yPositionTable = yStart - 60; // Ajuste o espaço para o cabeçalho da tabela
                contentStream.setFont(fontNegrito, 12); // Tamanho da fonte dos dados dos clientes diminuído
                contentStream.beginText();
                contentStream.newLineAtOffset(margin, yPositionTable);
                contentStream.showText("Nº OS");
                contentStream.newLineAtOffset(50, 0); // Espaço reduzido entre colunas
                contentStream.showText("Data");
                contentStream.newLineAtOffset(100, 0); // Espaço aumentado entre colunas
                contentStream.showText("Tipo");
                contentStream.newLineAtOffset(100, 0); // Espaço reduzido entre colunas
                contentStream.showText("Situação");
                contentStream.newLineAtOffset(120, 0); // Espaço aumentado entre colunas
                contentStream.showText("Equipamento");
                contentStream.newLineAtOffset(100, 0); // Espaço reduzido entre colunas
                contentStream.showText("Valor");
                contentStream.newLineAtOffset(50, 0); // Espaço reduzido entre colunas
                contentStream.showText("Cliente");
                contentStream.newLineAtOffset(100, 0); // Espaço reduzido entre colunas
                contentStream.showText("Telefone");
                contentStream.endText();

                // Adicionar a data de criação no canto superior direito
                float dateX = page.getMediaBox().getWidth() - margin - 165; // Posição X
                float dateY = yStart - 30; // Posição Y
                contentStream.setFont(dataFont, 10);
                contentStream.beginText();
                contentStream.newLineAtOffset(dateX, dateY);
                contentStream.showText("Data de Criação: " + dataFormatada);
                contentStream.endText();

                yPosition -= 80; // Atualiza a posição Y para os dados, deixando espaço após o título e cabeçalho

                int rowCount = 0;
                int pageNumber = 1;

                while (rs.next()) {
                    int idos = rs.getInt("service_order");
                    int val = rs.getInt("valor");
                    String data = rs.getString("data");
                    String tipoos = rs.getString("tipo");
                    String sit = rs.getString("situacao");
                    String equi = rs.getString("equipament");
                    String nome = rs.getString("name_client");
                    String tel = rs.getString("foneclient");

                    // Preenche os dados dos clientes na tabela
                    contentStream.setFont(dataFont, 10); // Tamanho da fonte dos dados dos clientes diminuído
                    contentStream.beginText();
                    contentStream.newLineAtOffset(margin, yPosition);
                    contentStream.showText(String.valueOf(idos));
                    contentStream.newLineAtOffset(50, 0); // Espaço reduzido entre colunas
                    contentStream.showText(data);
                    contentStream.newLineAtOffset(100, 0); // Espaço aumentado entre colunas
                    contentStream.showText(tipoos);
                    contentStream.newLineAtOffset(100, 0); // Espaço reduzido entre colunas
                    contentStream.showText(sit);
                    contentStream.newLineAtOffset(120, 0); // Espaço aumentado entre colunas
                    contentStream.showText(equi);
                    contentStream.newLineAtOffset(100, 0); // Espaço aumentado entre colunas
                    contentStream.showText(String.valueOf(val + " €"));
                    contentStream.newLineAtOffset(50, 0); // Espaço aumentado entre colunas
                    contentStream.showText(nome);
                    contentStream.newLineAtOffset(100, 0); // Espaço aumentado entre colunas
                    contentStream.showText(tel);
                    contentStream.endText();

                    yPosition -= rowHeight;

                    rowCount++;

                    // Verifica se precisa criar uma nova página para o restante dos dados
                    if (rowCount >= rowsPerPage) {
                        // Crie uma nova página
                        page = new PDPage(new PDRectangle(800, 1000)); // Tamanho de página personalizado
                        document.addPage(page);
                        contentStream.close(); // Feche o contentStream atual
                        contentStream = new PDPageContentStream(document, page);
                        yStart = page.getMediaBox().getHeight() - margin;
                        yPosition = yStart - 60; // Ajuste o espaço para o cabeçalho da tabela
                        rowCount = 0;
                        pageNumber++; // Incremente o número da página
                    }
                }

                // Feche o último contentStream
                contentStream.close();

                // Adicione o número da página no rodapé de todas as páginas
                for (PDPage p : document.getPages()) {
                    contentStream = new PDPageContentStream(document, p, PDPageContentStream.AppendMode.APPEND, true);
                    contentStream.setFont(dataFont, 10); // Tamanho da fonte para o número da página
                    contentStream.beginText();
                    contentStream.newLineAtOffset(margin, margin + 2);
                    contentStream.showText("Página " + pageNumber);
                    contentStream.endText();

                    // Desenhe uma linha horizontal abaixo do número da página
                    contentStream.setLineWidth(0.7f); // Largura da linha
                    contentStream.moveTo(margin, margin - 5); // Posição inicial da linha
                    contentStream.lineTo(p.getMediaBox().getWidth() - margin, margin - 5); // Posição final da linha
                    contentStream.stroke(); // Desenhe a linha

                    contentStream.close();
                }

                document.save("E:\\PAP\\Reports\\relatorioOS.pdf");
                document.close();

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
                //System.out.println(e);
            }

            try {
                // Abre o explorador de arquivos na pasta do relatório
                Desktop.getDesktop().open(relatorioOS);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Não foi possível abrir o explorador de arquivos: " + e.getMessage());
                //System.out.println(e);
            }
        }
    }//GEN-LAST:event_menrelserActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Mainscreen.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Mainscreen.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Mainscreen.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Mainscreen.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Mainscreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDesktopPane desktop;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lbldata;
    private javax.swing.JLabel lbldesk;
    public static javax.swing.JLabel lbluser;
    private javax.swing.JMenu menaju;
    private javax.swing.JMenuItem menajusob;
    private javax.swing.JMenu mencad;
    private javax.swing.JMenuItem mencadcli;
    private javax.swing.JMenuItem mencados;
    public static javax.swing.JMenuItem mencadusu;
    private javax.swing.JMenu menopc;
    private javax.swing.JMenuItem menopcsai;
    public static javax.swing.JMenu menrel;
    private javax.swing.JMenuItem menrelcli;
    private javax.swing.JMenuItem menrelser;
    private javax.swing.JMenuBar menubar;
    // End of variables declaration//GEN-END:variables
}
